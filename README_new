####################################################################
# CS:APP Proxy Lab
#
# Student Source Files
####################################################################

**새로운 테스트케이스를 만들었습니다

-만든 이유: CS:APP에서의 테스트케이스는 3개의 파일을 Fetch하고 tiny서버를 종료한 후 home.html을 proxy에
요청을 보내서 noproxy디렉토리에 저장한 후 원본과 비교하여 같은 파일이면 15점, 아니면 0점을 부여합니다.
이는 1MB 캐시 사이즈와 LRU정책, 100KB 이상 파일을 캐시할 수 없는지를 검사할 수 없습니다. 이를 검사할
테스트케이스를 반영한 driver_new.sh파일을 만들었습니다. 기존 sequential, concurrency test는 동일합니다.

-점수 배점 : sequential:40점, concurrency:15점, cache:45점 -> 총 100점
**cache는 다음과 같은 3가지 Test를 진행하게 됩니다.
1. 1MBsize limit test - 15점
이 테스트에서는 캐시가 1MB까지 저장되는지 테스트합니다. text1~text15까지 순차적으로 웹서버에 요청을 보냅니다.
각 텍스트 파일은 약 97KB로 캐시에 총 10개의 텍스트 파일이 저장될 수 있습니다. 15까지 요청을 끝나게 되면
15~6까지 캐시에 저장되고 1~5의 파일은 LRU로 인해 캐시에 저장되어 있으면 안됩니다. Tiny를 끄고 15~1까지
순차적으로 proxy에 요청을 합니다. 15~6파일이 성공적으로 받아와지면 각각 1점을 얻습니다. 5~1파일이 없으면
각각 1점을 얻습니다. 현재 15~1까지 요청으로 인해 캐시에는 6~15순서로 저장되어 있을 것입니다.

2. LRU test - 15점
이 테스트에서는 Tiny서버를 재작동시키고 다시 1~5텍스트 파일을 요청합니다. 그러면 캐시에는 1~10텍스트파일이
있고, 11~15파일은 캐시에 없어야합니다. 다시 Tiny서버를 종료시키고 Proxy에 1~15파일을 요청합니다.
1~10텍스트파일이 성공적으로 받아와지면 각각 1점을 얻고, 11~15파일이 없으면 각각 1점을 얻습니다.

3. 100KB test - 15점
이 테스트에서는 Tiny서버를 재작동시키고 100KB가 넘는 text16 파일을 요청합니다. 그리고 Tiny를 끄고
proxy에 text16파일을 요청합니다. 만약 해당 파일이 없다면 5점을 부여합니다. 그리고 여전히 캐시에 문제가 
없는지 1-10까지의 파일들을 요청해서 문제 없는 파일마다 각각 1점을 부여합니다.

-사용법
1. 압축된 cache_test를 압축을 풀어서 tiny 디렉토리에 넣습니다.
2. driver_new.sh를 원래 driver.sh가 있었던 디렉토리에 넣고 실행을 하면 됩니다.


